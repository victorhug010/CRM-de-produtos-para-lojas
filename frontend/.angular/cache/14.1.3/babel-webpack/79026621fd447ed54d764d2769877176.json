{"ast":null,"code":"import { UntypedFormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/user.service\";\nimport * as i4 from \"../services/snackbar.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"ngx-ui-loader\";\nimport * as i7 from \"@angular/material/toolbar\";\nimport * as i8 from \"@angular/flex-layout/flex\";\nexport let SignupComponent = /*#__PURE__*/(() => {\n  class SignupComponent {\n    constructor(formBuilder, router, userService, snackbarService, dialogRef, ngxService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.userService = userService;\n      this.snackbarService = snackbarService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.signupForm = UntypedFormGroup;\n    }\n\n    ngOnInit() {\n      this.signupForm = this.formBuilder.group({\n        name: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n        email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n        contactNumber: [null, [Validators.required, Validators.pattern(GlobalConstants.contactNumberRegex)]],\n        password: [null, [Validators.required]]\n      });\n    }\n\n    handleSubmit() {\n      this.ngxService.start();\n      var formData = this.signupForm.value;\n      var data = {\n        name: formData.name,\n        email: formData.email,\n        contacNumber: formData.contactNumber,\n        password: formData.password\n      };\n      this.userService.signup(data).subscribe(response => {\n        this.ngxService.stop();\n        this.dialogRef.close();\n        this.responseMessage = response === null || response === void 0 ? void 0 : response.message;\n        this.snackbarService.openSnackbar(this.responseMessage, \"\");\n        this.router.navigate(['/']);\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackbarService.openSnackbar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n  }\n\n  SignupComponent.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.SnackbarService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.NgxUiLoaderService));\n  };\n\n  SignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    decls: 4,\n    vars: 0,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"title-center\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Signup\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i7.MatToolbar, i7.MatToolbarRow, i8.DefaultLayoutDirective],\n    styles: [\".mat-toolbar[_ngcontent-%COMP%]{margin:-24px -24px 10px;width:auto}.title-center[_ngcontent-%COMP%]{flex:1 1 auto;text-align:center}mat-form-field[_ngcontent-%COMP%]{padding:5px}\"]\n  });\n  return SignupComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}