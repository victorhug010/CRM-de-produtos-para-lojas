{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { ChangePasswordComponent } from 'src/app/material-component/dialog/view-bill-products/change-password/change-password.component';\nimport { ConfirmationComponent } from 'src/app/material-component/dialog/view-bill-products/confirmation/confirmation.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/menu\";\nexport let AppHeaderComponent = /*#__PURE__*/(() => {\n  class AppHeaderComponent {\n    constructor(router, dialog) {\n      this.router = router;\n      this.dialog = dialog;\n    }\n\n    logout() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.data = {\n        message: 'Logout'\n      };\n      const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n      const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(user => {\n        dialogRef.close();\n        localStorage.clear();\n        this.router.navigate(['/']);\n      });\n    }\n\n    changePassword() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.width = \"550px\";\n      this.dialog.open(ChangePasswordComponent, dialogConfig);\n    }\n\n  }\n\n  AppHeaderComponent.ɵfac = function AppHeaderComponent_Factory(t) {\n    return new (t || AppHeaderComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n\n  AppHeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppHeaderComponent,\n    selectors: [[\"app-header\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[\"mat-icon-button\", \"\", 1, \"m-r-5\", 3, \"matMenuTriggerFor\"]],\n    template: function AppHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0)(1, \"mat-icon\");\n        i0.ɵɵtext(2, \"account_circle\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"matMenuTriggerFor\", ctx.profile);\n      }\n    },\n    dependencies: [i3.MatButton, i4.MatIcon, i5.MatMenuTrigger],\n    encapsulation: 2\n  });\n  return AppHeaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}