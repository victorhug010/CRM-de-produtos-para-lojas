{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"ngx-ui-loader\";\nimport * as i5 from \"src/app/services/snackbar.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/toolbar\";\nimport * as i11 from \"@angular/flex-layout/flex\";\n\nfunction ChangePasswordComponent_mat_error_11_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"this field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangePasswordComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ChangePasswordComponent_mat_error_11_span_1_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.changePasswordForm.controls.oldPassword.error.required);\n  }\n}\n\nfunction ChangePasswordComponent_mat_error_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"this field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangePasswordComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ChangePasswordComponent_mat_error_16_span_1_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.changePasswordForm.controls.oldPassword.error.required);\n  }\n}\n\nfunction ChangePasswordComponent_mat_error_21_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"this field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ChangePasswordComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ChangePasswordComponent_mat_error_21_span_1_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.changePasswordForm.controls.oldPassword.error.required);\n  }\n}\n\nfunction ChangePasswordComponent_mat_hunt_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hunt\")(1, \"span\");\n    i0.ɵɵtext(2, \"New password & confirm password does not match\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let ChangePasswordComponent = /*#__PURE__*/(() => {\n  class ChangePasswordComponent {\n    constructor(formBuilder, userService, dialogRef, ngxService, snackbarService) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.snackbarService = snackbarService;\n      this.changePasswordForm = FormGroup;\n    }\n\n    ngOnInit() {\n      this.changePasswordForm = this.formBuilder.group({\n        oldPassword: [null, [Validators.required]],\n        newPassword: [null, [Validators.required]],\n        confirmPassword: [null, [Validators.required]]\n      });\n    }\n\n    validateSubmit() {\n      if (this.changePasswordForm.controls['newPassword'].value != this.changePasswordForm.controls['confirmPassword'].value) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    handleChangePasswordSubmit() {\n      this.ngxService.start();\n      var formData = this.changePasswordForm.value;\n      var data = {\n        oldPassword: formData.oldPassword,\n        newPassword: formData.newPassword,\n        confirmPassword: formData.confirmPassword\n      };\n      this.userService.changePassword(data).subscribe(response => {\n        this.ngxService.stop();\n        this.responseMessage = response === null || response === void 0 ? void 0 : response.message;\n        this.dialogRef.close();\n        this.snackbarService.openSnackbar(this.responseMessage, \"sucess\");\n      }, error => {\n        var _a, _b;\n\n        console.log(error);\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackbarService.openSnackbar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n  }\n\n  ChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n    return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.NgxUiLoaderService), i0.ɵɵdirectiveInject(i5.SnackbarService));\n  };\n\n  ChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangePasswordComponent,\n    selectors: [[\"app-change-password\"]],\n    decls: 28,\n    vars: 6,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"title-center\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearance\", \"fill\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"oldPassword\", \"type\", \"password\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"newPassword\", \"type\", \"password\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"confirmPassword\", \"type\", \"password\", \"required\", \"\"], [\"align\", \"center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"mat-dialog-close\", \"\"]],\n    template: function ChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Change Password\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"mat-dialog-content\")(5, \"form\", 3)(6, \"div\", 4)(7, \"mat-form-field\", 5)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Old Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵtemplate(11, ChangePasswordComponent_mat_error_11_Template, 2, 1, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 5)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"New Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵtemplate(16, ChangePasswordComponent_mat_error_16_Template, 2, 1, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 5)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 9);\n        i0.ɵɵtemplate(21, ChangePasswordComponent_mat_error_21_Template, 2, 1, \"mat-error\", 7);\n        i0.ɵɵtemplate(22, ChangePasswordComponent_mat_hunt_22_Template, 3, 0, \"mat-hunt\", 7);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"mat-dialog-actions\", 10)(24, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_24_listener() {\n          return ctx.handleChangePasswordSubmit();\n        });\n        i0.ɵɵtext(25, \"Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 12);\n        i0.ɵɵtext(27, \"Close\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.changePasswordForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.changePasswordForm.controls.oldPassword.touched && ctx.changePasswordForm.controls.oldPassword.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.changePasswordForm.controls.newPassword.touched && ctx.changePasswordForm.controls.newPassword.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.changePasswordForm.controls.confirmPassword.touched && ctx.changePasswordForm.controls.confirmPassword.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateSubmit() && !ctx.changePasswordForm.controls.confirmPassword.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.validateSubmit() || !(ctx.changePassword.valid && ctx.changePasswordForm.dirty));\n      }\n    },\n    dependencies: [i6.NgIf, i7.MatButton, i3.MatDialogClose, i3.MatDialogContent, i3.MatDialogActions, i8.MatError, i8.MatFormField, i8.MatLabel, i9.MatInput, i10.MatToolbar, i10.MatToolbarRow, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i11.DefaultLayoutDirective, i11.DefaultFlexDirective],\n    styles: [\".mat-toolbar[_ngcontent-%COMP%]{margin:-24px -24px 10px;width:auto}.title-center[_ngcontent-%COMP%]{flex:1 1 auto;text-align:center}mat-form-field[_ngcontent-%COMP%]{padding:5px}\"]\n  });\n  return ChangePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}