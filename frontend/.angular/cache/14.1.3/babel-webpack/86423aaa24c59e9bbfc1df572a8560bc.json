{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-ui-loader\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/services/snackbar.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nexport let ManageUserComponent = /*#__PURE__*/(() => {\n  class ManageUserComponent {\n    constructor(ngxService, userService, snackbarService) {\n      this.ngxService = ngxService;\n      this.userService = userService;\n      this.snackbarService = snackbarService;\n      this.displayedColumns = ['name', 'email', 'contactNumber', 'status'];\n    }\n\n    ngOnInit() {\n      this.ngxService.start();\n      this.tableData();\n    }\n\n    tableData() {\n      this.userService.getUsers().subscribe(response => {\n        this.ngxService.stop();\n        this.dataSource = new MatTableDataSource(response);\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackbarService.openSnackbar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    handleChangeAction(status, id) {\n      this.ngxService.start();\n      var data = {\n        status: status.toString(),\n        id: id\n      };\n      this.userService.update(data).subscribe(response => {\n        this.ngxService.stop();\n        this.responseMessage = response === null || response === void 0 ? void 0 : response.message;\n        this.snackbarService.openSnackbar(this.responseMessage, \"sucess\");\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackbarService.openSnackbar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n  }\n\n  ManageUserComponent.ɵfac = function ManageUserComponent_Factory(t) {\n    return new (t || ManageUserComponent)(i0.ɵɵdirectiveInject(i1.NgxUiLoaderService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.SnackbarService));\n  };\n\n  ManageUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ManageUserComponent,\n    selectors: [[\"app-manage-user\"]],\n    decls: 12,\n    vars: 0,\n    consts: [[\"appearance\", \"fill\"], [\"matInput\", \"\", 3, \"keyup\"], [\"input\", \"\"]],\n    template: function ManageUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"b\")(2, \"span\");\n        i0.ɵɵtext(3, \"Manage User\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(4, \"hr\");\n        i0.ɵɵelementStart(5, \"mat-card\")(6, \"mat-form-field\", 0)(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Filter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 1, 2);\n        i0.ɵɵlistener(\"keyup\", function ManageUserComponent_Template_input_keyup_9_listener($event) {\n          return ctx.applyFilter($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(11, \"hr\");\n      }\n    },\n    dependencies: [i4.MatCard, i5.MatFormField, i5.MatLabel, i6.MatInput],\n    styles: [\"mat-card[_ngcontent-%COMP%]{padding:20px}table[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return ManageUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}