{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"ngx-ui-loader\";\nimport * as i5 from \"src/app/services/snackbar.service\";\nimport * as i6 from \"@angular/material/toolbar\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nexport let ChangePasswordComponent = /*#__PURE__*/(() => {\n  class ChangePasswordComponent {\n    constructor(formBuilder, userService, dialogRef, ngxService, snackbarService) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.snackbarService = snackbarService;\n      this.changePasswordForm = FormGroup;\n    }\n\n    ngOnInit() {\n      this.changePasswordForm = this.formBuilder.group({\n        oldPassword: [null, [Validators.required]],\n        newPassword: [null, [Validators.required]],\n        confirmPassword: [null, [Validators.required]]\n      });\n    }\n\n    validateSubmit() {\n      if (this.changePasswordForm.controls['newPassword'].value != this.changePasswordForm.controls['confirmPassword'].value) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    handleChangePasswordSubmit() {\n      this.ngxService.start();\n      var formData = this.changePasswordForm.value;\n      var data = {\n        oldPassword: formData.oldPassword,\n        newPassword: formData.newPassword,\n        confirmPassword: formData.confirmPassword\n      };\n      this.userService.changePassword(data).subscribe(response => {\n        this.ngxService.stop();\n        this.responseMessage = response === null || response === void 0 ? void 0 : response.message;\n        this.dialogRef.close();\n        this.snackbarService.openSnackbar(this.responseMessage, \"sucess\");\n      }, error => {\n        var _a, _b;\n\n        console.log(error);\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackbarService.openSnackbar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n  }\n\n  ChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n    return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.NgxUiLoaderService), i0.ɵɵdirectiveInject(i5.SnackbarService));\n  };\n\n  ChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangePasswordComponent,\n    selectors: [[\"app-change-password\"]],\n    decls: 5,\n    vars: 0,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"title-center\"]],\n    template: function ChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Change Password\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtext(4, \">\\n\");\n      }\n    },\n    dependencies: [i6.MatToolbar, i6.MatToolbarRow, i7.DefaultLayoutDirective],\n    styles: [\".mat-toolbar[_ngcontent-%COMP%]{margin:-24px -24px 10px;width:auto}.title-center[_ngcontent-%COMP%]{flex:1 1 auto;text-align:center}mat-form-field[_ngcontent-%COMP%]{padding:5px}\"]\n  });\n  return ChangePasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}