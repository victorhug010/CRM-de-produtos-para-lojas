{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { saveAs } from 'file-saver';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/category.service\";\nimport * as i3 from \"src/app/services/product.service\";\nimport * as i4 from \"src/app/services/snackbar.service\";\nimport * as i5 from \"src/app/services/bill.service\";\nimport * as i6 from \"ngx-ui-loader\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/material/select\";\nimport * as i14 from \"@angular/flex-layout/flex\";\n\nfunction ManageOrderComponent_mat_error_18_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" this Field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageOrderComponent_mat_error_18_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" this Field is invallid\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageOrderComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ManageOrderComponent_mat_error_18_span_1_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(2, ManageOrderComponent_mat_error_18_span_2_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.manageOrderForm.controls.name.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.manageOrderForm.controls.name.errors.pattern);\n  }\n}\n\nfunction ManageOrderComponent_mat_error_23_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" this Field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageOrderComponent_mat_error_23_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" this Field is invallid\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageOrderComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ManageOrderComponent_mat_error_23_span_1_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(2, ManageOrderComponent_mat_error_23_span_2_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.manageOrderForm.controls.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.manageOrderForm.controls.email.errors.pattern);\n  }\n}\n\nfunction ManageOrderComponent_mat_error_28_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" this Field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageOrderComponent_mat_error_28_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" this Field is invallid\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageOrderComponent_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ManageOrderComponent_mat_error_28_span_1_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(2, ManageOrderComponent_mat_error_28_span_2_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.manageOrderForm.controls.contactNumber.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.manageOrderForm.controls.contactNumber.errors.pattern);\n  }\n}\n\nfunction ManageOrderComponent_mat_error_39_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" this Field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageOrderComponent_mat_error_39_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" this Field is invallid\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageOrderComponent_mat_error_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ManageOrderComponent_mat_error_39_span_1_Template, 2, 0, \"span\", 6);\n    i0.ɵɵtemplate(2, ManageOrderComponent_mat_error_39_span_2_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.manageOrderForm.controls.contactNumber.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.manageOrderForm.controls.contactNumber.errors.pattern);\n  }\n}\n\nfunction ManageOrderComponent_mat_option_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const category_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r13.name);\n  }\n}\n\nexport let ManageOrderComponent = /*#__PURE__*/(() => {\n  class ManageOrderComponent {\n    constructor(formBuilder, categoryService, productService, snackbarService, billService, ngxService) {\n      this.formBuilder = formBuilder;\n      this.categoryService = categoryService;\n      this.productService = productService;\n      this.snackbarService = snackbarService;\n      this.billService = billService;\n      this.ngxService = ngxService;\n      this.displayedColumns = ['name', 'category', 'price', 'quantity', 'total', 'edit'];\n      this.dataSource = [];\n      this.manageOrderForm = FormGroup;\n      this.categorys = [];\n      this.products = [];\n      this.price = [];\n      this.totalAmount = 0;\n    }\n\n    ngOnInit() {\n      this.ngxService.start();\n      this.getCategorys();\n      this.manageOrderForm = this.formBuilder.group({\n        name: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n        email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n        contactNumber: [null, [Validators.required, Validators.pattern(GlobalConstants.contactNumberRegex)]],\n        paymentMethod: [null, [Validators.required]],\n        product: [null, [Validators.required]],\n        quantity: [null, [Validators.required]],\n        category: [null, [Validators.required]],\n        price: [null, [Validators.required]],\n        total: [0, [Validators.required]]\n      });\n    }\n\n    getCategorys() {\n      this.categoryService.getCategorys().subscribe(response => {\n        this.ngxService.stop();\n        this.categorys = response;\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackbarService.openSnackbar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n    getProductsByCategory(value) {\n      this.productService.getProductsByCategory(value.id).subscribe(response => {\n        this.products = response;\n        this.manageOrderForm.controls['price'].setValue('');\n        this.manageOrderForm.controls['quantity'].setValue('');\n        this.manageOrderForm.controls['total'].setValue('');\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackbarService.openSnackbar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n    getProductDetails(value) {\n      this.productService.getById(value.id).subscribe(response => {\n        this.price = response.price;\n        this.manageOrderForm.controls['price'].setValue(response.price);\n        this.manageOrderForm.controls['quantity'].setValue('1');\n        this.manageOrderForm.controls['total'].setValue(this.price * 1);\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackbarService.openSnackbar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n    setQuantity(value) {\n      var temp = this.manageOrderForm.controls['quantity'].value;\n\n      if (temp > 0) {\n        this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value * this.manageOrderForm.controls['price'].value);\n      } else if (temp != '') {\n        this.manageOrderForm.controls['quantity'].setValue('1');\n        this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value * this.manageOrderForm.controls['price'].value);\n      }\n    }\n\n    validateProductAdd() {\n      if (this.manageOrderForm.controls['total'].value === 0 || this.manageOrderForm.controls['total'].value === null || this.manageOrderForm.control['quantity'].value <= 0) return true;else return false;\n    }\n\n    validateSubmit() {\n      if (this.totalAmount === 0 || this.manageOrderForm.controls['name'].value === null || this.manageOrderForm.controls['email'].value === null || this.manageOrderForm.controls['contactNumber'].value === null || this.manageOrderForm.controls['paymentMethod'].value === null || !this.manageOrderForm.controls['contactNumber'].valid || !this.manageOrderForm.controls['email'].valid) return true;else return false;\n    }\n\n    add() {\n      var formData = this.manageOrderForm.value;\n      var productName = this.dataSource.find(e => e.id == formData.product.id);\n\n      if (productName === undefined) {\n        this.totalAmount = this.totalAmount + formData.total;\n        this.dataSource.push({\n          id: formData.product.id,\n          name: formData.product.name,\n          category: formData.category.name,\n          quantity: formData.quantity,\n          price: formData.price,\n          total: formData.total\n        });\n        this.dataSource = [...this.dataSource];\n        this.snackbarService.openSnackbar(GlobalConstants.productAdded, \"Sucess\");\n      }\n\n      this.snackbarService.openSnackbar(GlobalConstants.productExistError, GlobalConstants.error);\n    }\n\n    handleDeleteAction(value, element) {\n      this.totalAmount = this.totalAmount - element.total;\n      this.dataSource.splice(value, 1);\n      this.dataSource = [...this.dataSource];\n    }\n\n    submitAction() {\n      this.ngxService.start();\n      var formData = this.manageOrderForm.value;\n      var data = {\n        name: formData.name,\n        email: formData.email,\n        contactNumber: formData.contactNumber,\n        paymentMethod: formData.paymentMethod,\n        totalAmount: this.totalAmount,\n        productDetails: JSON.stringify(this.dataSource)\n      };\n      this.billService.generateReport(data).subscribe(response => {\n        this.dowloadFile(response === null || response === void 0 ? void 0 : response.uuid);\n        this.manageOrderForm.reset();\n        this.dataSource = [];\n        this.totalAmount = 0;\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackbarService.openSnackbar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n    dowloadFile(fileName) {\n      var data = {\n        uuid: fileName\n      };\n      this.billService.getPDF(data).subscribe(response => {\n        saveAs(response, fileName + '.pdf');\n        this.ngxService.stop;\n      });\n    }\n\n  }\n\n  ManageOrderComponent.ɵfac = function ManageOrderComponent_Factory(t) {\n    return new (t || ManageOrderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CategoryService), i0.ɵɵdirectiveInject(i3.ProductService), i0.ɵɵdirectiveInject(i4.SnackbarService), i0.ɵɵdirectiveInject(i5.BillService), i0.ɵɵdirectiveInject(i6.NgxUiLoaderService));\n  };\n\n  ManageOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ManageOrderComponent,\n    selectors: [[\"app-manage-order\"]],\n    decls: 53,\n    vars: 8,\n    consts: [[\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"float-right\", 3, \"disabled\", \"click\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"fxLayout\", \"row wrap\"], [\"appearance\", \"fill\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"contactNumber\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"paymentMethod\", \"required\", \"\"], [\"value\", \"Cash\"], [\"value\", \"Credit Card\"], [\"value\", \"Debit Card\"], [\"formControlName\", \"category\", 3, \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function ManageOrderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"b\")(2, \"span\");\n        i0.ɵɵtext(3, \"Manage Order\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function ManageOrderComponent_Template_button_click_4_listener() {\n          return ctx.submitAction();\n        });\n        i0.ɵɵtext(5, \"Submit & Get Bill \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(6, \"hr\");\n        i0.ɵɵelementStart(7, \"mat-card\")(8, \"b\")(9, \"span\");\n        i0.ɵɵtext(10, \"Customer Details:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"form\", 1)(12, \"div\", 2)(13, \"div\", 3)(14, \"mat-form-field\", 4)(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 5);\n        i0.ɵɵtemplate(18, ManageOrderComponent_mat_error_18_Template, 3, 2, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-form-field\", 4)(20, \"mat-label\");\n        i0.ɵɵtext(21, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 7);\n        i0.ɵɵtemplate(23, ManageOrderComponent_mat_error_23_Template, 3, 2, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-form-field\", 4)(25, \"mat-label\");\n        i0.ɵɵtext(26, \"Contact Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 8);\n        i0.ɵɵtemplate(28, ManageOrderComponent_mat_error_28_Template, 3, 2, \"mat-error\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"mat-form-field\", 4)(30, \"mat-label\");\n        i0.ɵɵtext(31, \"Payment Method\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"mat-select\", 9)(33, \"mat-option\", 10);\n        i0.ɵɵtext(34, \"Cash\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"mat-option\", 11);\n        i0.ɵɵtext(36, \"Credit Card\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"mat-option\", 12);\n        i0.ɵɵtext(38, \"Debit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(39, ManageOrderComponent_mat_error_39_Template, 3, 2, \"mat-error\", 6);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(40, \"hr\");\n        i0.ɵɵelementStart(41, \"mat-card\")(42, \"b\")(43, \"span\");\n        i0.ɵɵtext(44, \"Select Product:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(45, \"form\", 1)(46, \"div\", 2)(47, \"div\", 3)(48, \"mat-form-field\", 4)(49, \"mat-label\");\n        i0.ɵɵtext(50, \"Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"mat-select\", 13);\n        i0.ɵɵlistener(\"selectionChange\", function ManageOrderComponent_Template_mat_select_selectionChange_51_listener($event) {\n          return ctx.getProductsByCategory($event.value);\n        });\n        i0.ɵɵtemplate(52, ManageOrderComponent_mat_option_52_Template, 2, 2, \"mat-option\", 14);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.validateSubmit());\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.manageOrderForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.manageOrderForm.controls.name.touched && ctx.manageOrderForm.controls.name.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.manageOrderForm.controls.email.touched && ctx.manageOrderForm.controls.email.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.manageOrderForm.controls.contactNumber.touched && ctx.manageOrderForm.controls.contactNumber.invalid);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.manageOrderForm.controls.contactNumber.touched && ctx.manageOrderForm.controls.contactNumber.invalid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.manageOrderForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categorys);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i8.MatOption, i9.MatButton, i10.MatCard, i11.MatError, i11.MatFormField, i11.MatLabel, i12.MatInput, i13.MatSelect, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i14.DefaultLayoutDirective, i14.DefaultFlexDirective],\n    styles: [\"mat-form-field[_ngcontent-%COMP%]{padding:5px}.float-right[_ngcontent-%COMP%]{float:right}table[_ngcontent-%COMP%]{width:100%}mat-card[_ngcontent-%COMP%]{padding-bottom:30px!important}\"]\n  });\n  return ManageOrderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}